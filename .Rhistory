summary(model)
#3.1 使用glm函数执行广义线性模型分析（例如逻辑回归）
model_glm <- glm(var5 ~ var1 + var2 + var3 + var4, data = data, family = binomial)
#3.1 使用glm函数执行广义线性模型分析（例如逻辑回归）
model_glm <- glm(var5 ~ var1 + var2 + var3 + var4, data = data,)
summary(model_glm)
## 4. 判别分析.
# 创建类别变量
data$group <- factor(rep(c("Group1", "Group2"), each = 5))
# 执行判别分析
判别_result <-判别函数名称(data = data, formula = var1 + var2 + var3 + var4 ~ group)
cat("多元线性回归结果:\n")
#2.3 执行多元线性回归分析
model <- lm(var5 ~ var1 + var2 + var3 + var4, data = data)
cat("多元线性回归结果:\n")
summary(model)
#2.4 进行模型检验
summary_result <- summary(model)
print(summary_result)
summary(model)
# 执行判别分析
判别_result <-lda(data = data, formula = var1 + var2 + var3 + var4 ~ group)
## 1．数据的简单统计分析，包括均值、方差的计算与检验#########################
# 生成第一组数据
set.seed(1234)
##宋国轩 专业数据统计分析作业
rm(list = ls())
## 1．数据的简单统计分析，包括均值、方差的计算与检验#########################
# 生成第一组数据
set.seed(1234)
data1 <- rnorm(100)
# 简单统计分析
summary(data1)
## 2. 多变量相关性分析，方差分析、多元线性回归与模型检验#####################
# 生成第二组数据
data2 <- matrix(rnorm(200), nrow=20)
# 多变量相关性分析
cor(data2)
## 2. 多变量相关性分析，方差分析、多元线性回归与模型检验#####################
# 生成第二组数据
set.seed(1234)
data2 <- matrix(rnorm(200), nrow=20)
# 多变量相关性分析
cor(data2)
data2 <- matrix(rnorm(20), nrow=2)
# 多变量相关性分析
cor(data2)
data2 <- matrix(rnorm(2), nrow=2)
# 多变量相关性分析
cor(data2)
## 2. 多变量相关性分析，方差分析、多元线性回归与模型检验#####################
# 生成第二组数据
set.seed(123)
data2 <- matrix(rnorm(200), nrow=20)
# 多变量相关性分析
cor(data2)
## 2. 多变量相关性分析，方差分析、多元线性回归与模型检验#####################
# 生成第二组数据
set.seed(1234)
data2 <- matrix(rnorm(200), nrow=20)
# 多变量相关性分析
cor(data2)
## 2. 多变量相关性分析，方差分析、多元线性回归与模型检验#####################
# 生成第二组数据
set.seed(1234)
# 生成模拟数据
x1 <- rnorm(100)  # 生成100个来自标准正态分布的随机数作为x1
x2 <- rnorm(100)  # 生成100个来自标准正态分布的随机数作为x2
x3 <- rnorm(100)  # 生成100个来自标准正态分布的随机数作为x3
y <- 2*x1 + 3*x2 + 4*x3 + rnorm(100)  # 生成100个因变量y的值，其中y与x1、x2、x3的关系是已知的，并添加一些噪声
# 将数据存储在数据框中
data2 <- data.frame(x1=x1, x2=x2, x3=x3, y=y)
#2.1多变量相关性分析
# 使用cor()函数计算相关性矩阵
correlation_matrix <- cor(data2)
print(correlation_matrix)
#2.2 方差分析
# 将数据分为两组（例如，通过随机分配）
set.seed(1234)  # 为了结果可重复
group <- sample(c("Group1", "Group2"), 100, replace=TRUE)
data$group <- as.factor(group)  # 将组别转换为因子类型
data2$group <- as.factor(group)  # 将组别转换为因子类型
# ANOVA分析
anova_result <- aov(y ~ group, data=data2)
summary(anova_result)
#2.3多元线性回归与模型检验
#拟合多元线性回归模型
model <- lm(y ~ x1 + x2 + x3, data=data2)
# 查看模型摘要以获取详细信息（例如，系数、置信区间、p值等）
summary(model)
## 3. 广义线性模型或一般线性模型############################################
# 生成第三组数据，模拟因变量和自变量之间的关系
set.seed(1234)
x <- rnorm(100)
y <- 2*x + rnorm(100)
data3 <- data.frame(x=x, y=y)
# 广义线性模型或一般线性模型拟合数据
model <- lm(y ~ x, data=data3)
summary(model)
Residuals:
#  Min       1Q   Median       3Q      Max
#-2.88626 -0.61401  0.00236  0.58645  2.98774
Coefficients:
#  Estimate Std. Error t value Pr(>|t|)
#(Intercept)  0.03715    0.10498   0.354    0.724
#x            1.97392    0.10378  19.021   <2e-16 ***
---
#  Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#Residual standard error: 1.037 on 98 degrees of freedom
#Multiple R-squared:  0.7869,	Adjusted R-squared:  0.7847
#F-statistic: 361.8 on 1 and 98 DF,  p-value: < 2.2e-16
#解释：输出结果包括模型的拟合信息、系数估计、标准误差、t值和p值等。
#从结果可以看出，模型拟合良好，自变量x对因变量y有显著影响，且影响是线性的。
## 4. 判别分析###########################################################
# 生成第四组数据，模拟两个分类变量
set.seed(1234)
data4 <- data.frame(group=rep(c("A", "B"), each=50), x=rnorm(100), y=rnorm(100))
# 判别分析
library(MASS)
# 判别分析
library(MASS)
model <- lda(group ~ x + y, data=data4)
summary(model)
summary(model)
Residuals:
#  Min       1Q   Median       3Q      Max
#-2.88626 -0.61401  0.00236  0.58645  2.98774
Coefficients:
#  Estimate Std. Error t value Pr(>|t|)
#(Intercept)  0.03715    0.10498   0.354    0.724
#x            1.97392    0.10378  19.021   <2e-16 ***
---
#  Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#Residual standard error: 1.037 on 98 degrees of freedom
#Multiple R-squared:  0.7869,	Adjusted R-squared:  0.7847
#F-statistic: 361.8 on 1 and 98 DF,  p-value: < 2.2e-16
#解释：输出结果包括模型的拟合信息、系数估计、标准误差、t值和p值等。
#从结果可以看出，模型拟合良好，自变量x对因变量y有显著影响，且影响是线性的。
## 4. 判别分析###########################################################
# 生成第四组数据，模拟两个分类的观测值
set.seed(1234)
Residuals:
#  Min       1Q   Median       3Q      Max
#-2.88626 -0.61401  0.00236  0.58645  2.98774
Coefficients:
#  Estimate Std. Error t value Pr(>|t|)
#(Intercept)  0.03715    0.10498   0.354    0.724
#x            1.97392    0.10378  19.021   <2e-16 ***
---
#  Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#Residual standard error: 1.037 on 98 degrees of freedom
#Multiple R-squared:  0.7869,	Adjusted R-squared:  0.7847
#F-statistic: 361.8 on 1 and 98 DF,  p-value: < 2.2e-16
#解释：输出结果包括模型的拟合信息、系数估计、标准误差、t值和p值等。
#从结果可以看出，模型拟合良好，自变量x对因变量y有显著影响，且影响是线性的。
## 4. 判别分析###########################################################
# 生成第四组数据，模拟两个分类的观测值
set.seed(1234)
summary(model)
## 3. 广义线性模型或一般线性模型############################################
# 生成第三组数据，模拟因变量和自变量之间的关系
set.seed(1234)
data4 <- data.frame(group=rep(c("A", "B"), each=50), x=rnorm(100), y=rnorm(100))
data4$group <- as.factor(data4$group)
# 判别分析
library(MASS)
model <- lda(group ~ x + y, data=data4)
print(model)
setwd("/Users/yingwang/Desktop/paper/a我的文献库/dataverse_files前沿知识与科学生产")
rm(list = ls())  # 清除所有变量
par(family = "Segoe UI")  # 设置字体为"Segoe UI"
#----------------------------------------------------------------------
# FIGURE I: Arrival Delay of International Journals
#----------------------------------------------------------------------
# 加载数据
data("Dataset_1")
#----------------------------------------------------------------------
# FIGURE I: Arrival Delay of International Journals
#----------------------------------------------------------------------
# 加载数据
install.packages("foreign")
#----------------------------------------------------------------------
# FIGURE I: Arrival Delay of International Journals
#----------------------------------------------------------------------
# 加载数据
library(foreign)
rm(list = ls())  # 清除所有变量
setwd("/Users/yingwang/Desktop/paper/a我的文献库/dataverse_files前沿知识与科学生产")
par(family = "Segoe UI")  # 设置字体为"Segoe UI"
#----------------------------------------------------------------------
# FIGURE I: Arrival Delay of International Journals
#----------------------------------------------------------------------
# 加载数据
library(foreign)
# 从.dta文件中读取数据
data <- readstata13("Dataset_1.dta")
# 从.dta文件中读取数据
data <- readstata17("Dataset_1.dta")
# 从.dta文件中读取数据
data <- readstata("Dataset_1.dta")
# 从.dta文件中读取数据
data <- read.dta("Dataset_1.dta")
# 从.dta文件中读取数据
data <- read.dta("Dataset_1")
setwd("/Users/yingwang/Desktop/paper/a我的文献库/dataverse_files前沿知识与科学生产")
# 从.dta文件中读取数据
data <- read.dta("Dataset_1")
# 从.dta文件中读取数据
data <- read.dta("Dataset_1.dta")
getwd()
setwd("/Users/yingwang/Desktop/paper/a我的文献库/dataverse_files前沿知识与科学生产")
getwd()
setwd("/Desktop/paper/a我的文献库/dataverse_files前沿知识与科学生产")
setwd("/Users/yingwang/Desktop/paper/a我的文献库")
getwd()
setwd(/Users/yingwang/Desktop/paper/a我的文献库/dataverse_files前沿知识与科学生产)
setwd("/Users/yingwang/Desktop/paper/a我的文献库/dataverse_files前沿知识与科学生产")
getwd()
setwd("/Users/yingwang/Desktop/paper/a我的文献库/dataverse_files前沿知识与科学生产")
getwd()
setwd("~/Desktop/paper/a我的文献库/dataverse_files前沿知识与科学生产")
getwd()
source("~/Documents/bigdata/课堂练习.R", echo=TRUE)
plot(world["pop"])
library(sf)
library(terra)
library(sf)
library(terra)
install.packages("tmap", repos = c("https://r-tmap.r-universe.dev","https://cloud.r-project.org"))
library(terra)
library(terra)
library(terra)
library(dplyr)
library(dplyr)
library(spData)
nstall.packages('spDataLarge',
repos='https://nowosad.github.io/drat/', type='source')
install.packages('spDataLarge',
repos='https://nowosad.github.io/drat/', type='source')
install.packages("spDataLarge", repos = "https://nowosad.r-universe.dev")
library(terra)
install.packages("terra")
library(terra)
getwd()
setwd("/Users/yingwang/Docments/bigdata/作业/a11-geo-yingwang1023")
setwd("/Users/yingwang/Docmuents/bigdata/作业/a11-geo-yingwang1023")
setwd("/Users/yingwang/Docmuents")
getwd()
setwd(/Users/yingwang/Docmuents/bigdata/作业/a11-geo-yingwang1023)
setwd("/Users/yingwang/Documents/bigdata/作业/a11-geo-yingwang1023")
getwd()
hefei <- read.table("hefei.txt", header=TRUE, sep=" ")
View(hefei)
rm(list = ls())
library(readr)
hefei <- read.table("hefei.txt", header=TRUE)
View(hefei)
dev_zone1 <- read.table("G341022合肥经济技术开发区.txt", header=TRUE)
library(sf)
library(sf)
dv_zone1 <- read_sf(dsn = "G341022合肥经济技术开发区.txt")
View(dv_zone1)
class(dv_zone1)
plot(dv_zone1)
dv_zone3 <- read_sf(dsn = "G342020合肥高新技术产业开发区区块二.txt")
dv_zone2 <- read_sf(dsn = "G342020合肥高新技术产业开发区区块一.txt")
distance <- function(lon1, lat1, lon2, lat2) {
R <- 6371 # 地球半径
dlon <- (lon2 - lon1) * pi / 180
dlat <- (lat2 - lat1) * pi / 180
a <- sin(dlat/2)^2 + cos(lat1 * pi / 180) * cos(lat2 * pi / 180) * sin(dlon/2)^2
c <- 2 * atan2(sqrt(a), sqrt(1-a))
distance <- R * c
return(distance)
}
hefei$dv_zone1 <- apply(hefei, 1, function(x) sum(distance(x["lng"], x["lat"], dv_zone1$lng, dv_zone1$lat) < 1))
str(hefei)
hefei$dev_zone1_count <- apply(hefei, 1, function(x) sum(st_distance(st_as_sf(hefei), st_as_sf(dv_zone1)) < 1000))
print(hefei$dev_zone1_count)
rm(list = ls())
library(readr)
hefei <- read.table("hefei.txt", header=TRUE)
library(sf)
dv_zone1 <- read_sf(dsn = "G341022合肥经济技术开发区.txt")
class(dv_zone1)
plot(dv_zone1)
dv_zone3 <- read_sf(dsn = "G342020合肥高新技术产业开发区区块二.txt")
dv_zone2 <- read_sf(dsn = "G342020合肥高新技术产业开发区区块一.txt")
distance <- function(lon1, lat1, lon2, lat2) {
R <- 6371 # 地球半径
dlon <- (lon2 - lon1) * pi / 180
dlat <- (lat2 - lat1) * pi / 180
a <- sin(dlat/2)^2 + cos(lat1 * pi / 180) * cos(lat2 * pi / 180) * sin(dlon/2)^2
c <- 2 * atan2(sqrt(a), sqrt(1-a))
distance <- R * c
return(distance)
}
hefei$dev_zone1 <- apply(hefei, 1, function(x) sum(distance(x["lng"], x["lat"], dv_zone1$lng, dv_zone1$lat) < 0.001))
str(hefei)
str(dv_zone1)
hefei$lng <- as.numeric(hefei$lng)
hefei$lat <- as.numeric(hefei$lat)
hefei$dev_zone1 <- apply(hefei, 1, function(x) sum(distance(x["lng"], x["lat"], dv_zone1$lng, dv_zone1$lat) < 0.001))
distance <- function(lon1, lat1, lon2, lat2) {
R <- 6371 # 地球半径
dlon <- (lon2 - lon1) * pi / 180
dlat <- (lat2 - lat1) * pi / 180
a <- sin(dlat/2)^2 + cos(lat1 * pi / 180) * cos(lat2 * pi / 180) * sin(dlon/2)^2
c <- 2 * atan2(sqrt(a), sqrt(1-a))
distance <- R * c
return(distance)
}
hefei$dev_zone1 <- apply(hefei, 1, function(x) sum(distance(x["lng"], x["lat"], dv_zone1$lng, dv_zone1$lat) < 0.001))
View(hefei)
View(dv_zone3)
plot(dv_zone1)
plot(dv_zone2)
plot(dv_zone3)
rm(list = ls())
library(readr)
hefei <- read.table("hefei.txt", header=TRUE)
library(sf)
hefei_points <- st_as_sf(hefei, coords = c("lng", "lat"), crs = 4326)
dv_zone1 <- read_sf(dsn = "G341022合肥经济技术开发区.txt")
dv_zone3 <- read_sf(dsn = "G342020合肥高新技术产业开发区区块二.txt")
dv_zone2 <- read_sf(dsn = "G342020合肥高新技术产业开发区区块一.txt")
hefei_in_dv1 <- st_within(hefei_points, dv_zone1)
hefei_in_dv2 <- st_within(hefei_points, dv_zone2)
hefei_in_dv3 <- st_within(hefei_points, dv_zone3)
num_enterprises_in_dv1 <- sum(hefei_in_dv1)
View(hefei_in_dv1)
print(hefei_in_dv1)
hefei_in_dv1 <- st_intersection(hefei_points, dv_zone1)
hefei_in_dv2 <- st_intersection(hefei_points, dv_zone2)
hefei_in_dv3 <- st_intersection(hefei_points, dv_zone3)
rm(list = ls())
library(readr)
hefei <- read.table("hefei.txt", header=TRUE)
library(readr)
hefei <- read.table("hefei.txt", header=TRUE)
library(readr)
hefei <- read.table("hefei.txt", header=TRUE)
hefei_points <- st_as_sf(hefei, coords = c("lng", "lat"), crs = 4326)
dv_zone1 <- read_sf(dsn = "G341022合肥经济技术开发区.txt")
dv_zone3 <- read_sf(dsn = "G342020合肥高新技术产业开发区区块二.txt")
dv_zone2 <- read_sf(dsn = "G342020合肥高新技术产业开发区区块一.txt")
num_companies_zone1 <- sum(st_intersects(hefei_points, dv_zone1))
cat("Number of companies within Development Zone 1:", num_companies_zone1, "\n")
radius <- c(1000, 3000, 5000) # in meters
for (r in radius) {
# Buffer the development zones
dv_zone1_buffer <- st_buffer(dv_zone1, dist = r)
dv_zone2_buffer <- st_buffer(dv_zone2, dist = r)
dv_zone3_buffer <- st_buffer(dv_zone3, dist = r)
# Count the number of companies within the buffer zones
num_companies_zone1_buffer <- sum(st_intersects(hefei_points, dv_zone1_buffer))
num_companies_zone2_buffer <- sum(st_intersects(hefei_points, dv_zone2_buffer))
num_companies_zone3_buffer <- sum(st_intersects(hefei_points, dv_zone3_buffer))
cat("Number of companies within", r/1000, "km from Development Zone 1:", num_companies_zone1_buffer, "\n")
cat("Number of companies within", r/1000, "km from Development Zone 2:", num_companies_zone2_buffer, "\n")
cat("Number of companies within", r/1000, "km from Development Zone 3:", num_companies_zone3_buffer, "\n")
}
if (!inherits(hefei_points, "sf")) {
stop("'hefei_points' should be of class 'sf'.")
}
num_companies_zone1 <- sum(st_intersects(hefei_points, dv_zone1))
intersection1 <- st_intersects(hefei_points, dv_zone1)
num_companies_zone1 <- sum(!is.na(intersection1))
intersection2 <- st_intersects(hefei_points, dv_zone2)
num_companies_zone2 <- sum(!is.na(intersection2))
intersection3 <- st_intersects(hefei_points, dv_zone3)
num_companies_zone3 <- sum(!is.na(intersection3))
cat("Number of companies within Development Zone 1:", num_companies_zone1, "\n")
rm(list = ls())
library(readr)
hefei <- read.table("hefei.txt", header=TRUE)
library(sf)
hefei_points <- st_as_sf(hefei, coords = c("lng", "lat"), crs = 4326)
# 读取开发区坐标
dv_zone1 <- read_sf(dsn = "G341022合肥经济技术开发区.txt")
dv_zone3 <- read_sf(dsn = "G342020合肥高新技术产业开发区区块二.txt")
dv_zone2 <- read_sf(dsn = "G342020合肥高新技术产业开发区区块一.txt")
intersection1 <- st_intersects(hefei_points, dv_zone1)
num_companies_zone1 <- sum(!is.na(intersection1))
intersection1 <- st_intersects(hefei_points, dv_zone1)
num_companies_zone1 <- sum(!is.na(intersection1))
intersection2 <- st_intersects(hefei_points, dv_zone2)
num_companies_zone2 <- sum(!is.na(intersection2))
intersection3 <- st_intersects(hefei_points, dv_zone3)
num_companies_zone3 <- sum(!is.na(intersection3))
cat("Number of companies within Development Zone 1:", num_companies_zone1, "\n")
cat("Number of companies within Development Zone 2:", num_companies_zone2, "\n")
cat("Number of companies within Development Zone 3:", num_companies_zone3, "\n")
radius <- c(1000, 3000, 5000) # in meters
for (r in radius) {
# Buffer the development zones
dv_zone1_buffer <- st_buffer(dv_zone1, dist = r)
dv_zone2_buffer <- st_buffer(dv_zone2, dist = r)
dv_zone3_buffer <- st_buffer(dv_zone3, dist = r)
# Count the number of companies within the buffer zones
num_companies_zone1_buffer <- sum(st_intersects(hefei_points, dv_zone1_buffer))
num_companies_zone2_buffer <- sum(st_intersects(hefei_points, dv_zone2_buffer))
num_companies_zone3_buffer <- sum(st_intersects(hefei_points, dv_zone3_buffer))
cat("Number of companies within", r/1000, "km from Development Zone 1:", num_companies_zone1_buffer, "\n")
cat("Number of companies within", r/1000, "km from Development Zone 2:", num_companies_zone2_buffer, "\n")
cat("Number of companies within", r/1000, "km from Development Zone 3:", num_companies_zone3_buffer, "\n")
}
radius <- c(1000, 3000, 5000) # in meters
for (r in radius) {
# Buffer the development zones
dv_zone1_buffer <- st_buffer(dv_zone1, dist = r)
dv_zone2_buffer <- st_buffer(dv_zone2, dist = r)
dv_zone3_buffer <- st_buffer(dv_zone3, dist = r)
# Calculate the intersection with the buffered zones
intersection1_buffer <- st_intersects(hefei_points, dv_zone1_buffer)
intersection2_buffer <- st_intersects(hefei_points, dv_zone2_buffer)
intersection3_buffer <- st_intersects(hefei_points, dv_zone3_buffer)
# Count the number of companies within the buffered zones
num_companies_zone1_buffer <- sum(sapply(intersection1_buffer, length))
num_companies_zone2_buffer <- sum(sapply(intersection2_buffer, length))
num_companies_zone3_buffer <- sum(sapply(intersection3_buffer, length))
cat("Number of companies within", r/1000, "km from Development Zone 1:", num_companies_zone1_buffer, "\n")
cat("Number of companies within", r/1000, "km from Development Zone 2:", num_companies_zone2_buffer, "\n")
cat("Number of companies within", r/1000, "km from Development Zone 3:", num_companies_zone3_buffer, "\n")
}
cat("Number of companies within Development Zone 1:", num_companies_zone1, "\n")
cat("Number of companies within Development Zone 1:", num_companies_zone1, "\n")
cat("Number of companies within Development Zone 2:", num_companies_zone2, "\n")
cat("Number of companies within Development Zone 3:", num_companies_zone3, "\n")
rm(list = ls())
library(readr)
hefei <- read.table("hefei.txt", header=TRUE)
library(sf)
hefei_points <- st_as_sf(hefei, coords = c("lng", "lat"), crs = 4326)
library(sp)
dv_zone1 <- read_sf(dsn = "G341022合肥经济技术开发区.txt")
dv_zone3 <- read_sf(dsn = "G342020合肥高新技术产业开发区区块二.txt")
dv_zone2 <- read_sf(dsn = "G342020合肥高新技术产业开发区区块一.txt")
intersection1 <- st_within(hefei_points, dv_zone1)
num_companies_zone1 <- sum(!is.na(intersection1))
intersection2 <- st_within(hefei_points, dv_zone2)
num_companies_zone2 <- sum(!is.na(intersection2))
intersection3 <- st_within(hefei_points, dv_zone3)
num_companies_zone3 <- sum(!is.na(intersection3))
cat("Number of companies within Development Zone 1:", num_companies_zone1, "\n")
cat("Number of companies within Development Zone 2:", num_companies_zone2, "\n")
cat("Number of companies within Development Zone 3:", num_companies_zone3, "\n")
library(ggplot2)
ggplot() +
geom_sf(data = dv_zone1, fill = "lightblue") +
geom_sf(data = dv_zone2, fill = "lightgreen") +
geom_sf(data = dv_zone3, fill = "lightyellow") +
theme_minimal()
map_with_companies <- ggplot() +
geom_sf(data = dv_zone1, fill = "lightblue") +
geom_sf(data = dv_zone2, fill = "lightgreen") +
geom_sf(data = dv_zone3, fill = "lightyellow") +
geom_sf(data = hefei_points, color = "red", size = 1) + # 用红色标记企业
theme_minimal()
print(map_with_companies)
map <- ggplot() +
geom_sf(data = dv_zone1, fill = "lightblue") +
geom_sf(data = dv_zone2, fill = "lightgreen") +
geom_sf(data = dv_zone3, fill = "lightyellow") +
theme_minimal()
print(map)
map_with_companies <- map + ggplot() +
geom_sf(data = dv_zone1, fill = "lightblue") +
geom_sf(data = dv_zone2, fill = "lightgreen") +
geom_sf(data = dv_zone3, fill = "lightyellow") +
geom_sf(data = hefei_points, color = "red", size = 1) + # 用红色标记企业
theme_minimal()
map_with_companies <- map +
geom_sf(data = dv_zone1, fill = "lightblue") +
geom_sf(data = dv_zone2, fill = "lightgreen") +
geom_sf(data = dv_zone3, fill = "lightyellow") +
geom_sf(data = hefei_points, color = "red", size = 1) + # 用红色标记企业
theme_minimal()
print(map_with_companies)
print(map_with_companies)
summary()
companies <- ggplot() +
geom_sf(data = dv_zone1, fill = "lightblue") +
geom_sf(data = dv_zone2, fill = "lightgreen") +
geom_sf(data = dv_zone3, fill = "lightyellow") +
geom_sf(data = hefei_points, color = "red", size = 1) + # 用红色标记企业
theme_minimal()
map_with_companies <- map + companies
map_with_companies <- ggplot() +
geom_sf(data = dv_zone1, fill = "lightblue") +
geom_sf(data = dv_zone2, fill = "lightgreen") +
geom_sf(data = dv_zone3, fill = "lightyellow") +
geom_sf(data = hefei_points, color = "red", size = 1) + # 用红色标记企业
theme_minimal()
# 显示地图
print(map_with_companies)
hefei_map <- st_read("合肥市.json")
hefei_plot <- ggplot() +
geom_sf(data = hefei_map) +
theme_minimal()
print(hefei_plot)
hefei_plot_with_companies <- hefei_plot +
geom_sf(data = hefei_points, color = "red", size = 1) + # 用红色标记企业
labs(title = "Map of Hefei with Enterprises") # 添加标题
print(hefei_plot_with_companies)
print(hefei_plot_with_companies)
hefei_plot_with_companies <- hefei_plot +
geom_sf(data = hefei_points, color = "gray", size = 1) + # 用红色标记企业
labs(title = "Map of Hefei with Enterprises") # 添加标题
print(hefei_plot_with_companies)
rm(list = ls())
exit
